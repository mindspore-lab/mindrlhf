seed: 0
output_dir: './output'  # 当前不支持自定义修改，请勿修改该默认
load_checkpoint: "" #
auto_trans_ckpt: False  # If true, auto transform load_checkpoint to load in distributed model
src_strategy_path_or_dir: ""
only_save_strategy: False
resume_training: False
run_mode: 'train'

trainer:
  type: CausalLanguageModelingTrainer
  model_name: 'llama_7b'

runner_config:
  epochs: 1
  batch_size: 4
  sink_mode: True
  sink_size: 2

optimizer:
  type: FP32StateAdamWeightDecay
  beta1: 0.9
  beta2: 0.999
  eps: 1.e-8
  learning_rate: 8.e-8
  weight_decay: 0.0

train_dataset: &train_dataset
  data_loader:
    type: MindDataset
    dataset_dir: ""
    shuffle: True
    num_samples: 52000
  input_columns: ["chosen_input_ids", "chosen_attention_mask",
                  "rejected_input_ids", "rejected_attention_mask",
                  "position_id", "loss_mask", "end_ind"]
  output_columns: ["input_ids", "position_id", "attention_mask", "loss_mask", "end_ind"]
  num_parallel_workers: 16
  python_multiprocessing: False
  drop_remainder: True
  batch_size: 4
  repeat: 1
  numa_enable: False
  prefetch_size: 1
  pad_token_id: 2
train_dataset_task:
  type: RewardModelDataset
  dataset_config: *train_dataset
# if True, do evaluate during the training process. if false, do nothing.
# note that the task trainer should support _evaluate_in_training function.
do_eval: False
eval_step_interval: -1        # num of step intervals between each eval, -1 means no step end eval.
eval_epoch_interval: 50        # num of epoch intervals between each eval, 1 means eval on every epoch end.

eval_dataset: &eval_dataset
  data_loader:
    type: MindDataset
    dataset_dir: ""
    shuffle: False
    num_samples: 4000
  input_columns: ["chosen_input_ids", "chosen_attention_mask",
                  "rejected_input_ids", "rejected_attention_mask",
                  "position_id", "loss_mask", "end_ind"]
  output_columns: ["input_ids", "position_id", "attention_mask", "loss_mask", "end_ind"]
  num_parallel_workers: 8
  python_multiprocessing: False
  drop_remainder: False
  batch_size: 4
  repeat: 1
  numa_enable: False
  prefetch_size: 1
eval_dataset_task:
  type: RewardModelDataset
  dataset_config: *eval_dataset
  
use_parallel: True
# default parallel of device num = 8 910A
parallel_config:
  data_parallel: 1
  model_parallel: 8
  pipeline_stage: 1
  optimizer_shard: True
  micro_batch_num: 1
  vocab_emb_dp: False
  gradient_aggregation_group: 4
# when model parallel is greater than 1, we can set micro_batch_interleave_num=2, that may accelerate the train process.
micro_batch_interleave_num: 1

recompute_config:
  recompute: True
  parallel_optimizer_comm_recompute: False
  mp_comm_recompute: True
  recompute_slice_activation: True

callbacks:
  - type: MFLossMonitor
  - type: CheckpointMonitor
    prefix: "llama_2_7b"
    save_checkpoint_steps: 1000
    keep_checkpoint_max: 3
    integrated_save: False
    async_save: False
  - type: ObsMonitor

# mindspore context init config
context:
  mode: 0 # 0--Graph Mode; 1--Pynative Mode
  device_target: "Ascend"
  enable_graph_kernel: False
  graph_kernel_flags: "--disable_expand_ops=Softmax,Dropout --enable_parallel_fusion=true --reduce_fuse_depth=8 --enable_auto_tensor_inplace=true"
  max_call_depth: 10000
  max_device_memory: "50GB"
  save_graphs: False
  save_graphs_path: "./graph"
  device_id: 0

parallel:
  parallel_mode: 1 # 0-dataset, 1-semi, 2-auto, 3-hybrid
  gradients_mean: False
  enable_alltoall: False
  full_batch: True
  search_mode: "sharding_propagation"
  enable_parallel_optimizer: True
  strategy_ckpt_save_file: "./ckpt_strategy.ckpt"
  parallel_optimizer_config:
    gradient_accumulation_shard: False
    parallel_optimizer_threshold: 64

model:
  model_config:
    type: LlamaConfig
    model_name: llama_2_7b
    batch_size: 4 # 1 add for increase predict
    seq_length: 4096
    hidden_size: 4096
    num_layers: 32
    num_heads: 32
    vocab_size: 32000
    multiple_of: 256
    rms_norm_eps: 1.0e-5
    bos_token_id: 1
    eos_token_id: 2
    pad_token_id: 0
    ignore_token_id: -100
    compute_dtype: "float16"
    layernorm_compute_type: "float32"
    softmax_compute_type: "float16"
    rotary_dtype: "float16"
    param_init_type: "float16"
    use_past: False
    pretrain_seqlen: 4096 # seqlen of the pretrain checkpoint: 2048 for llama and 4096 for llama2
    extend_method: "None"
    compute_in_2d: True
    offset: 0
    checkpoint_name_or_path: ""
    repetition_penalty: 1
    max_decode_length: 512
    top_k: 3
    top_p: 1
    do_sample: False
  arch:
    type: LlamaRewardModel

processor:
  return_tensors: ms
  tokenizer:
    unk_token: '<|endoftext|>'
    bos_token: '<|endoftext|>'
    eos_token: '<|endoftext|>'
    pad_token: '<|endoftext|>'
    type: GPT2Tokenizer
  type: GPT2Processor

metric:
  type: PerplexityMetric

runner_wrapper:
  type: MFTrainOneStepCell
  scale_sense:
    type: DynamicLossScaleUpdateCell
    loss_scale_value: 128
    scale_factor: 2
    scale_window: 100
  use_clip_grad: True

eval_callbacks:
  - type: ObsMonitor

auto_tune: False
filepath_prefix: './autotune'
autotune_per_step: 10

profile: False
profile_start_step: 1
profile_stop_step: 10
init_start_profile: False
profile_communication: False
profile_memory: True
layer_scale: False
layer_decay: 0.65
lr_scale_factor: 256

remote_save_url: "Please input obs url on AICC platform."
